# See https://github.com/SciTools/.github/wiki/Linting
# for SciTools linting guidelines

[build-system]
# Defined by PEP 518
requires = ["setuptools>=77.0.3"]
# Defined by PEP 517
build-backend = "setuptools.build_meta"

[project]
authors = [
    {name = "Tephi Contributors", email = "scitools.pub@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Topic :: Scientific/Engineering :: Visualization",
]
description = "Tephigram plotting in Python"
dynamic = [
    "readme",
    "version",
]
keywords = [
    "tephigram",
    "radiosonde",
    "meteorology",
    "visualization",
]
license = "BSD-3-Clause"
license-files = ["LICENSE"]
name = "tephi"
requires-python = ">=3.10"
dependencies = ["matplotlib", "numpy", "scipy"]

[project.urls]
Code = "https://github.com/SciTools/tephi"
Issues = "https://github.com/SciTools/tephi/issues"
Binder= "https://mybinder.org/v2/gh/SciTools/tephi/main?filepath=index.ipynb"
Docs =  "https://tephi.readthedocs.io/en/latest/"

[tool.black]
line-length = 79
target-version = ["py310", "py311"]
include = '\.pyi?$'

[tool.mypy]
strict = false
ignore_missing_imports = true
warn_unused_configs = true
warn_unreachable = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
exclude = []

[tool.numpydoc_validation]
checks = [
    "all",  # Enable all numpydoc validation rules, apart from the following:

    # -> Docstring text (summary) should start in the line immediately
    #    after the opening quotes (not in the same line, or leaving a
    #    blank line in between)
    "GL01",  # Permit summary line on same line as docstring opening quotes.

    # -> Closing quotes should be placed in the line after the last text
    #    in the docstring (do not close the quotes in the same line as
    #    the text, or leave a blank line between the last text and the
    #    quotes)
    "GL02",  # Permit a blank line before docstring closing quotes.

    # -> Double line break found; please use only one blank line to
    #    separate sections or paragraphs, and do not leave blank lines
    #    at the end of docstrings
    "GL03",  # Ignoring.

    # -> See Also section not found
    "SA01",  # Not all docstrings require a "See Also" section.

    # -> No extended summary found
    "ES01",  # Not all docstrings require an "Extended Summary" section.

    # -> No examples section found
    "EX01",  # Not all docstrings require an "Examples" section.

    # -> No Yields section found
    "YD01",  # Not all docstrings require a "Yields" section.
]
exclude = [
    '\.__eq__$',
    '\.__ne__$',
    '\.__repr__$',
]

[tool.pytest.ini_options]
minversion = "6.0"
markers = ["graphical: mark a test as a graphical test"]
addopts = ["-ra",
           "-v",
           "--cov-config=.coveragerc",
           "--cov=tephi",
           "--cov-report=term-missing",
           "--doctest-modules",
           "--showlocals",
           "--strict-markers",
           "--strict-config"
    ]
xfail_strict = true
log_cli_level = "info"
testpaths = [
  "tephi/",
]
doctest_optionflags = "NORMALIZE_WHITESPACE ELLIPSIS NUMBER"
filterwarnings = ["default"]

[tool.repo-review]
# These are a list of the currently failing tests:
ignore = [
    # https://learn.scientific-python.org/development/guides/style/#PC180
    "PC180",  # Uses prettier

    # https://learn.scientific-python.org/development/guides/packaging-simple/#PY005
    "PY005",  # Has tests folder
]

[tool.ruff]
line-length = 88

[tool.ruff.format]
preview = false

[tool.ruff.lint]
ignore = [
    # flake8-commas (COM)
    # https://docs.astral.sh/ruff/rules/#flake8-commas-com
    "COM812",  # Trailing comma missing.
    "COM819",  # Trailing comma prohibited.

    # flake8-implicit-str-concat (ISC)
    # https://docs.astral.sh/ruff/rules/single-line-implicit-string-concatenation/
    # NOTE: This rule may cause conflicts when used with "ruff format".
    "ISC001",  # Implicitly concatenate string literals on one line.

    # TODO: exceptions that still need investigating are below. Might be fixable, or might become permanent (above):

    "INP001", # File `` is part of an implicit namespace package. Add an `__init__.py`.

    ]
    preview = false
    select = [
        "ALL",

        # list specific rules to include that is skipped using numpy convention.
        "D212",  # Multi-line docstring summary should start at the first line
    ]

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["tephi"]

[tool.ruff.lint.per-file-ignores]
# All test scripts
"tephi/tests/*.py" = [
    # https://docs.astral.sh/ruff/rules/undocumented-public-module/
    "D100",  # Missing docstring in public module
    "D205",  # 1 blank line required between summary line and description
    "D401",  # 1 First line of docstring should be in imperative mood
]
"setup.py" = [
    "EXE001", # Shebang is present but file is not executable
]
"docs/source/conf.py" = [
    "ERA001", # Has commented out code
    "INP001" # File `docs/source/conf.py` is part of an implicit namespace package. Add an `__init__.py`.
]
"docs/source/plot/barbs.py" = [
    "INP001" # File `docs/source/plot/barbs.py` is part of an implicit namespace package. Add an `__init__.py`.
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.setuptools.dynamic]
version = { attr = "tephi.__version__"}
readme = {file = ["README.md"], content-type = "text/markdown"}

[tool.setuptools.package-data]
tephi = [
    "etc/test_data/*.txt",
    "tests/results/*.npz",
    "tests/results/imagerepo.json"
]

[tool.setuptools.packages.find]
include = ["tephi*"]

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.environments]
default = { features = [], solve-group = "default" }
devs = { features = ["devs"], solve-group = "default" }
docs = { features = ["devs", "docs"], solve-group = "default" }
geovista = { features = ["devs", "docs", "test"], solve-group = "default" }
test = { features = ["devs", "test"], solve-group = "default" }

devs-py310 = { features = ["devs", "py310"], solve-group = "py310" }
docs-py310 = { features = ["devs", "docs", "py310"], solve-group = "py310" }
tephi-py310 = { features = [
  "devs",
  "docs",
  "py310",
  "test",
], solve-group = "py310" }
py310 = { features = ["py310"], solve-group = "py310" }
test-py310 = { features = ["devs", "py310", "test"], solve-group = "py310" }
devs-py311 = { features = ["devs", "py311"], solve-group = "py311" }
docs-py311 = { features = ["devs", "docs", "py311"], solve-group = "py311" }
tephi-py311 = { features = [
  "devs",
  "docs",
  "py311",
  "test",
], solve-group = "py311" }
py311 = { features = ["py311"], solve-group = "py311" }
test-py311 = { features = ["devs", "py311", "test"], solve-group = "py311" }

[tool.pixi.dependencies]
cartopy = ">=0.24.0,<0.25"
click = ">=8.2.1,<9"
click-default-group = ">=1.2.4,<2"
cmocean = ">=4.0.3,<5"
colorcet = ">=3.1.0,<4"
lazy_loader = ">=0.4,<0.5"
netcdf4 = ">=1.7.2,<2"
numpy = ">=2.2.6,<3"
platformdirs = ">=4.3.8,<5"
pykdtree = ">=1.4.1,<2"
pyproj = ">=3.7.1,<4"
setuptools = ">=80.9.0,<81"
setuptools-scm = ">=8.3.1,<9"

[tool.pixi.feature.devs.dependencies]
fastparquet = ">=2024.11.0,<2025"
h3-py = ">=4.2.2,<5"
pandas = ">=2.2.3,<3"
pre-commit = ">=4.2.0,<5"
rasterio = ">=1.4.3,<2"
ruff = ">=0.12.0,<0.13"
zizmor = ">=1.9.0,<2"

[tool.pixi.feature.devs.pypi-dependencies]
tephi = { path = ".", editable = true }

[tool.pixi.feature.devs.tasks]
fmt = "ruff format"
lint = "ruff check"

[tool.pixi.feature.docs.dependencies]
ipykernel = ">=6.29.5,<7"
ipywidgets = ">=8.1.7,<9"
joblib = ">=1.5.1,<2"
jupyter-server-proxy = ">=4.4.0,<5"
myst-nb = ">=1.2.0,<2"
nest-asyncio = ">=1.6.0,<2"
numpydoc = ">=1.8.0,<2"
sphinx = ">=8.2.3,<9"
sphinx-autoapi = ">=3.5.0,<4"
sphinx-book-theme = ">=1.1.3,<2"
sphinx-click = ">=6.0.0,<7"
sphinx-copybutton = ">=0.5.2,<0.6"
sphinx-design = ">=0.6.1,<0.7"
sphinx-gallery = ">=0.19.0,<0.20"
sphinx-tags = ">=0.4,<0.5"
sphinx-togglebutton = ">=0.3.2,<0.4"
sphinx_changelog = ">=1.6.0,<2"

[tool.pixi.feature.docs.pypi-dependencies]
sphinx-tippy = ">=0.4.3,<0.5"

[tool.pixi.feature.docs.tasks.clean]
cmd = "make clean"
cwd = "docs"

[tool.pixi.feature.docs.tasks.clean-all]
cmd = "make clean-all"
cwd = "docs"
depends-on = [{ "task" = "clean" }, { "task" = "clean-cache" }]

[tool.pixi.feature.docs.tasks.clean-cache]
cmd = "make clean-cache"
cwd = "docs"

[tool.pixi.feature.docs.tasks.doctest]
cmd = "make doctest"
cwd = "docs"
depends-on = [{ "task" = "clean" }]

[tool.pixi.feature.docs.tasks.make]
args = [{ "arg" = "option", "default" = "html-noplot" }]
cmd = "make {{ option }}"
cwd = "docs"
depends-on = [{ "task" = "clean" }]

[tool.pixi.feature.docs.tasks.serve-html]
args = [{ "arg" = "option", "default" = "html-noplot" }]
cmd = "make serve-html"
cwd = "docs"
depends-on = [{ "task" = "make", "args" = ["{{ option }}"] }]

[tool.pixi.feature.py310.dependencies]
pip = ">=25.1.1,<26"
python = "3.10.*"

[tool.pixi.feature.py311.dependencies]
pip = ">=25.1.1,<26"
python = "3.11.*"

[tool.pixi.feature.test.dependencies]
codecov = ">=2.1.13,<3"
pytest = ">=8.4.0,<9"
pytest-cov = ">=6.1.1,<7"
pytest-mock = ">=3.14.1,<4"
